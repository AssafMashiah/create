<!-- Alex Burdusel: Configuration was moved to spring-boot java annotations config-->
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0" metadata-complete="true">


    <display-name>CGS Backend</display-name>

    <!-- Session configuration (in minutes) -->
    <session-config>
        <session-timeout>300</session-timeout>
    </session-config>


    <!--
        Dispatcher that will handle serving dynamic content through REST api
    -->
    <servlet>
        <servlet-name>rest-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:springContext/applicationContext-rest.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>rest-dispatcher</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <!-- map websocket to rest dispatcher-->
    <servlet-mapping>
        <servlet-name>rest-dispatcher</servlet-name>
        <url-pattern>/websocket/*</url-pattern>
    </servlet-mapping>

    <!--
        Dispatcher that will handle everything needed for login/logout
    -->
    <servlet>
        <servlet-name>auth-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:springContext/applicationContext-login.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>auth-dispatcher</servlet-name>
        <url-pattern>/auth/*</url-pattern>
    </servlet-mapping>


    <!--
        Dispatcher that will handle serving the static content of DL player
    -->
    <servlet>
        <servlet-name>client-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:springContext/applicationContext-client.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>client-dispatcher</servlet-name>
        <url-pattern>/client/*</url-pattern>
    </servlet-mapping>

    <!--
        Dispatcher that will handle serving admin content
    -->
    <servlet>
        <servlet-name>admin-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:springContext/applicationContext-admin.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>admin-dispatcher</servlet-name>
        <url-pattern>/admin/*</url-pattern>
    </servlet-mapping>

    <!--
       Dispatcher that will handle the front end logging process
   -->
    <servlet>
        <servlet-name>logging-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:springContext/applicationContext-logging.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>logging-dispatcher</servlet-name>
        <url-pattern>/logging/*</url-pattern>
    </servlet-mapping>


    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            <![CDATA[
                classpath*:springContext/applicationContext-shared.xml
                classpath*:springContext/applicationContext-service.xml
                classpath*:springContext/applicationContext-dal.xml
                classpath*:springContext/applicationContext-security.xml
                classpath*:springContext/applicationContext-web-common.xml
                classpath*:springContext/applicationContext-scheduling.xml
            ]]>
        </param-value>
    </context-param>


    <!--<filter>-->
    <!--<filter-name>encoding-filter</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>-->
    <!--<init-param>-->
    <!--<param-name>encoding</param-name>-->
    <!--<param-value>UTF-8</param-value>-->
    <!--</init-param>-->
    <!--<init-param>-->
    <!--<param-name>forceEncoding</param-name>-->
    <!--<param-value>true</param-value>-->
    <!--</init-param>-->
    <!--</filter>-->


    <!--<filter-mapping>-->
    <!--<filter-name>encoding-filter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <filter>
        <filter-name>loginSecurityFilter</filter-name>
        <filter-class>org.t2k.cgs.filters.LoginSecurityFilterChain</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>loginSecurityFilter</filter-name>
        <url-pattern>/auth/login-secure</url-pattern>
    </filter-mapping>


    <filter>
        <filter-name>monitoring</filter-name>
        <filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
        <init-param>
            <param-name>system-actions-enabled</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>no-database</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--init-param>
            <param-name>allowed-addr-pattern</param-name>
            <param-value>127\.0\.0\.1</param-value>
        </init-param-->
    </filter>
    <filter-mapping>
        <filter-name>monitoring</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <listener>
        <listener-class>net.bull.javamelody.SessionListener</listener-class>
    </listener>



<!--
    <filter>
        <filter-name>utf8Filter</filter-name>
        <filter-class>org.t2k.cgs.filters.Utf8Filter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>utf8Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
-->


    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>




    <!-- Spring Security Filter -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>authenticationDetailsFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>authenticationDetailsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>errorHandlerFilter</filter-name>
        <filter-class>org.t2k.cgs.filters.ErrorHandlerFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>errorHandlerFilter</filter-name>
        <url-pattern>/rest/*</url-pattern>
    </filter-mapping>


    <!-- CACHE Filter -->
    <filter>
        <filter-name>headersConfigFilter</filter-name>
        <filter-class>org.t2k.cgs.filters.HeadersConfigFilter</filter-class>
        <init-param>
            <param-name>Cache-Control</param-name>
            <param-value>no-cache, private</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>headersConfigFilter</filter-name>
        <url-pattern>/rest/*</url-pattern>
    </filter-mapping>


    <filter>
        <filter-name>codeHeadersConfigFilter</filter-name>
        <filter-class>org.t2k.cgs.filters.HeadersConfigFilter</filter-class>
        <init-param>
            <param-name>Cache-Control</param-name>
            <param-value>maxage=604800, private</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>codeHeadersConfigFilter</filter-name>
        <url-pattern>/client/*</url-pattern>
    </filter-mapping>

    <!-- add no-cache header for player's app cache
  Added to avoid caching of the player's version
  Bug: CREATE-439 -->

    <filter>
        <filter-name>cacheFilterForPlayer</filter-name>
        <filter-class>org.t2k.cgs.filters.HeadersConfigFilter</filter-class>
        <init-param>
            <param-name>overrideExistingHeader</param-name>    <!-- use this parameter to exclude specific url from the filter, use a comma for separation -->
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>Cache-Control</param-name>
            <param-value>no-cache, no-store, must-revalidate</param-value>
        </init-param>
        <init-param>
            <param-name>Expires</param-name>
            <param-value>0</param-value>
        </init-param>
        <init-param>
            <param-name>Pragma</param-name>
            <param-value>no-store, no-cache</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>cacheFilterForPlayer</filter-name>
        <url-pattern>/client/player/scp/player/players.appcache</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>cacheFilterForPlayer</filter-name>
        <url-pattern>/client/player/scp/index.html</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>cacheFilterForPlayerCache</filter-name>
        <filter-class>org.t2k.cgs.filters.HeadersConfigFilter</filter-class>
        <init-param>
            <param-name>overrideExistingHeader</param-name>    <!-- use this parameter to exclude specific url from the filter, use a comma for separation -->
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>Cache-Control</param-name>
            <param-value>no-cache, no-store, must-revalidate</param-value>
        </init-param>
        <init-param>
            <param-name>Expires</param-name>
            <param-value>0</param-value>
        </init-param>
        <init-param>
            <param-name>Pragma</param-name>
            <param-value>no-store, no-cache</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>cacheFilterForPlayerCache</filter-name>
        <url-pattern>/client/player/scp/player/cache.html</url-pattern>
    </filter-mapping>


    <!-- ETAG Filter -->
    <filter>
        <filter-name>etagHeaderFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>etagHeaderFilter</filter-name>
        <url-pattern>/rest/*</url-pattern>
    </filter-mapping>


    <!-- Application start-->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>


    <filter>
        <filter-name>loginAOKFilter</filter-name>
        <filter-class>org.t2k.cgs.filters.LoginAOKFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>loginAOKFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- login configuration for javaMelody monitoring service -->
    <login-config>
        <auth-method>BASIC</auth-method>
        <realm-name>Monitoring</realm-name>
    </login-config>
    <security-role>
        <role-name>monitoring</role-name>
    </security-role>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Monitoring</web-resource-name>
            <url-pattern>/monitoring</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>monitoring</role-name>
        </auth-constraint>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

</web-app>
