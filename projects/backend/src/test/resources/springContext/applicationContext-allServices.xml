<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd"
       default-init-method="init"
       default-destroy-method="destroy">

    <!--context:spring-configured/ -->
    <import resource="classpath*:springContext/applicationTestContext-dal.xml"/>
    <mongo:repositories base-package="org.t2k" mongo-template-ref="cgsMongoTemplate"/>

    <bean name="narrationServiceBean" class="org.t2k.cgs.utils.NarrationServiceImpl"/>
    <bean name="generalUtils" class="org.t2k.cgs.utils.GeneralUtils"/>
    <bean name="systemUtils" class="org.t2k.cgs.utils.SystemUtils"/>

    <bean name="userDetails" class="org.t2k.cgs.security.AuthenticationHolder" factory-method="getUserDetails"
          scope="request">
        <aop:scoped-proxy/>
    </bean>

    <bean name="contentValidatorBean" class="org.t2k.cgs.model.utils.ContentValidator" init-method="initValidators">
        <property name="active" value="true"/>
        <property name="courseJsonSchemaResource" value="classpath:schema/course_v7.json"/>
    </bean>

    <!--messageChannel and simpMessagingTemplate are just to have the EbookServiceImpl instantiate. -->
    <bean name="messageChannel" class="org.springframework.messaging.support.ExecutorSubscribableChannel"/>
    <bean name="simpMessagingTemplate" class="org.springframework.messaging.simp.SimpMessagingTemplate">
        <constructor-arg ref="messageChannel"/>
    </bean>

    <bean name="coursesDataServiceBean" class="org.t2k.cgs.course.CourseDataServiceImpl" init-method="init">
        <property name="en_US_locale" value="classpath:locales/en_US.zip"/>
        <property name="fr_FR_locale" value="classpath:locales/fr_FR.zip"/>
        <property name="pt_BR_locale" value="classpath:locales/pt_BR.zip"/>
        <property name="iw_IL_locale" value="classpath:locales/iw_IL.zip"/>
        <property name="ar_IL_locale" value="classpath:locales/ar_IL.zip"/>
        <property name="nl_NL_locale" value="classpath:locales/nl_NL.zip"/>
        <property name="ja_JP_locale" value="classpath:locales/ja_JP.zip"/>
        <property name="zn_CN_locale" value="classpath:locales/zn_CN.zip"/>
        <property name="zn_HK_locale" value="classpath:locales/zn_HK.zip"/>
        <property name="ko_KR_locale" value="classpath:locales/ko_KR.zip"/>
    </bean>

    <bean name="asyncConfiguration" class="org.t2k.cgs.config.async.AsyncConfiguration"/>
    <bean name="websocketClientService" class="org.t2k.cgs.websocket.WebsocketClientServiceImpl"/>

    <!--<bean name="eBookManager" class="org.t2k.cgs.ebooks.EBookManagerImpl" init-method="init"/>-->
    <bean name="eBookManagerSpringAsync" class="org.t2k.cgs.ebooks.EBookManagerSpringAsync">
        <constructor-arg index="0" ref="asyncTaskExecutor"/>
        <constructor-arg index="1" ref="eBookService"/>
        <constructor-arg index="2" ref="eBookCleanupService"/>
        <constructor-arg index="3" ref="jobsServiceBean"/>
    </bean>
    <bean name="eBookService" class="org.t2k.cgs.ebooks.EBookServiceImpl">
        <property name="EBooksDao" ref="eBooksDao"/>
    </bean>

    <bean name="eBookCleanupService" class="org.t2k.cgs.ebooks.EBookCleanupServiceImpl"/>
    <bean name="courseCleanupService" class="org.t2k.cgs.course.CourseCleanupServiceImpl"/>

    <bean name="eBookServiceWithMock" class="org.t2k.cgs.ebooks.EBookServiceImpl">
        <property name="EBooksDao" ref="eBooksDao"/>
    </bean>
    <bean name="epubValidator" class="org.t2k.cgs.ebooks.epub.EpubValidator" init-method="copyJarToFileSystem">
        <property name="epubValidatorZip" value="classpath:epubCheck/epubcheck-4.0.1.zip"/>
    </bean>

    <!-- EBOOK  CONVERSION  -->

    <!-- bean name="eBookFormatEnum" class="org.t2k.cgs.model.ebooks.EBookFormatEnum" -->
    <bean name="eBookConversionServiceFactory" class="org.t2k.cgs.ebooks.EBookConversionServiceFactory"/>
    <bean name="epubToEBookConversionService" class="org.t2k.cgs.ebooks.epub.EPubToEBookConversionServiceImpl"/>
    <bean name="pdfToEBookIDRConversionService" class="org.t2k.cgs.ebooks.pdf.PdfToEBookIDRConversionServiceImpl"/>
    <bean name="pdfToEBookQOPPAConversionService" class="org.t2k.cgs.ebooks.pdf.PdfToEBookQOPPAConversionServiceImpl"/>
    <bean name="pdfToEBookPdf2HtmlEXConversionService"
          class="org.t2k.cgs.ebooks.pdf.PdfToEBookPdf2HtmlEXConversionServiceImpl" init-method="init">
        <property name="pdf2htmlEX_win" value="classpath:pdf2htmlexwin/pdf2htmlexwin.zip"/>
        <property name="pdf2htmlEX_lin" value="classpath:pdf2htmlexlin/pdf2htmlexLin.zip"/>
    </bean>

    <bean name="directoryMonitor" class="org.t2k.cgs.utils.directory.DirectoryMonitor" scope="prototype">
        <constructor-arg type="java.io.File" name="directoryPath" value=""/>
        <constructor-arg type="java.lang.String" name="jobId" value=""/>
        <constructor-arg type="java.lang.Integer" name="totalPages" value=""/>
    </bean>

    <bean name="htmlParsingService" class="org.t2k.cgs.ebooks.HtmlParsingService" init-method="readConfigurationFile">
        <property name="textSearchConfigurationResource"
                  value="classpath:textSearchConfiguration/textSearchConfigurationFile.csv"/>
    </bean>

    <bean name="lockService" class="org.t2k.cgs.lock.LockServiceImpl">
        <property name="locksDao" ref="locksDao"/>
        <property name="courseDataService" ref="coursesDataServiceBean"/>
        <property name="tocItemsManager" ref="tocItemsManager"/>
    </bean>

    <bean name="transactionService" class="org.t2k.cgs.lock.TransactionServiceImpl">
        <property name="transactionsDao" ref="transactionsDao"/>
    </bean>

    <bean name="lessonsDataServiceBean" class="org.t2k.cgs.tocItem.TocItemDataServiceImpl">
        <property name="tocItemDao" ref="lessonsDao"/>
        <property name="lockService" ref="lockService"/>
        <property name="transactionService" ref="transactionService"/>
        <property name="sequenceService" ref="sequenceService"/>
        <property name="contentValidator" ref="contentValidatorBean"/>
        <property name="cleanupsDao" ref="cleanupsDao"/>
    </bean>

    <bean name="assessmentsDataServiceBean" class="org.t2k.cgs.tocItem.TocItemDataServiceImpl">
        <property name="tocItemDao" ref="assessmentsDao"/>
        <property name="lockService" ref="lockService"/>
        <property name="transactionService" ref="transactionService"/>
        <property name="sequenceService" ref="sequenceService"/>
        <property name="contentValidator" ref="contentValidatorBean"/>
        <property name="cleanupsDao" ref="cleanupsDao"/>
    </bean>

    <bean name="tocItemsManager" class="org.t2k.cgs.tocItem.TocItemsManagerImpl">
        <constructor-arg name="assessmentsDataService" ref="assessmentsDataServiceBean"/>
        <constructor-arg name="lessonsDataService" ref="lessonsDataServiceBean"/>
        <constructor-arg name="lockService" ref="lockService"/>
    </bean>

    <bean name="importLessonService" class="org.t2k.cgs.tocItem.tocimport.ImportTocItemServiceImpl"/>
    <bean name="sequenceService" class="org.t2k.cgs.sequences.SequenceServiceImpl"/>

    <!--bean for assets upload and download management-->
    <bean name="cmsService" class="org.t2k.cgs.cms.CmsServiceImpl">
        <property name="configuration" ref="t2kConfig"/>
        <property name="fileDao" ref="fileDao"/>

    </bean>

    <bean name="contentItemValidation" class="org.t2k.cgs.validation.ContentItemValidation"/>

    <bean name="tocItemDataService" class="org.t2k.cgs.tocItem.TocItemDataServiceImpl">
        <property name="sequenceService" ref="sequenceService"/>
        <property name="contentValidator" ref="contentValidatorBean"/>
        <property name="lockService" ref="lockService"/>
        <property name="tocItemDao" ref="lessonsDao"/>
        <property name="transactionService" ref="transactionService"/>
        <property name="cleanupsDao" ref="cleanupsDao"/>
    </bean>

    <!-- Standards service -->
    <bean name="standardsService" class="org.t2k.cgs.standards.StandardsServiceImpl">
        <property name="standardsDao" ref="standardsDao"/>
        <property name="lockService" ref="lockService"/>
        <property name="courseDataService" ref="coursesDataServiceBean"/>
        <property name="tocItemsManager" ref="tocItemsManager"/>
    </bean>

    <!-- Skills service -->
    <bean name="skillsService" class="org.t2k.cgs.skills.SkillsServiceImpl">
        <property name="skillsDao" ref="skillsDao"/>
    </bean>

    <!-- Publisher service -->
    <bean name="publisherService" class="org.t2k.cgs.publisher.AccountServiceImpl">
        <property name="publisherDao" ref="publisherDao"/>
        <property name="groupDataValidator">
            <bean class="org.t2k.cgs.publisher.validation.BaseAccountDataValidator" init-method="initValidators">
                <property name="active" value="true"/>
                <property name="accountDataJsonSchemaResource" value="classpath:schema/groupSchema.json"/>
            </bean>
        </property>
        <property name="accountDataValidator">
            <bean class="org.t2k.cgs.publisher.validation.BaseAccountDataValidator" init-method="initValidators">
                <property name="active" value="true"/>
                <property name="accountDataJsonSchemaResource" value="classpath:schema/accountSchema.json"/>
            </bean>
        </property>
        <property name="userService" ref="userService"/>
    </bean>


    <bean class="org.t2k.cgs.configuration.ClientConfigurationServiceImpl" factory-bean="clientConfigurationService"
          factory-method="getConfiguration" scope="request">
        <aop:scoped-proxy/>
    </bean>

    <bean class="org.t2k.cgs.authentication.AuthenticationServiceImpl" factory-bean="authenticationService"
          factory-method="getAuthenticationData" scope="request">
        <aop:scoped-proxy/>
    </bean>

    <bean name="authenticationService" class="org.t2k.cgs.authentication.AuthenticationServiceImpl" scope="singleton"/>

    <bean name="packageResourceHandler" class="org.t2k.cgs.packaging.PackageResourceHandlerImpl" scope="prototype"/>

    <bean name="clientConfigurationService" class="org.t2k.cgs.configuration.ClientConfigurationServiceImpl"
          scope="singleton">
        <property name="versionService" ref="versionService"/>
        <property name="contentValidator" ref="contentValidatorBean"/>
    </bean>

    <bean name="packagingService" class="org.t2k.cgs.packaging.PackagingServiceImpl">
        <property name="packagingDao" ref="packagingDao"/>
    </bean>

    <bean name="tinyKeysDao" class="org.t2k.cgs.dao.tinyKeys.TinyKeysMongoDao" parent="mongoDao"/>

    <bean name="appletService" class="org.t2k.cgs.applet.AppletServiceImpl">
        <property name="gcrClient" ref="gcrClient"/>
        <property name="appletDao" ref="appletDao"/>
        <property name="lockService" ref="lockService"/>
        <property name="cmsService" ref="cmsService"/>
        <property name="tocItemsManager" ref="tocItemsManager"/>
        <property name="sequenceService" ref="sequenceService"/>
    </bean>

    <bean name="exportImportService" class="org.t2k.cgs.exportImport.ExportImportImpl"/>

    <bean name="catalogueUploader" class="org.t2k.cgs.packaging.uploaders.CatalogueUploader">
        <property name="configuration" ref="t2kConfig"/>
    </bean>

    <bean name="publishLogUtil" class="org.t2k.cgs.packaging.logutils.PublishLogUtil"/>

    <bean name="blossomUploader" class="org.t2k.cgs.packaging.uploaders.BlossomUploader"/>

    <bean name="catalogueManifestHandler"
          class="org.t2k.cgs.packaging.ManifestHandlerImpl">
        <property name="doChangeFileNamesToSha1" value="true"/>
        <property name="doCleanExcludedResourcesFromManifest" value="false"/>
    </bean>

    <bean name="standAloneManifestHandler"
          class="org.t2k.cgs.packaging.ManifestHandlerImpl">
        <property name="doChangeFileNamesToSha1" value="false"/>
        <property name="doCleanExcludedResourcesFromManifest" value="false"/>
    </bean>

    <bean name="blossomManifestHandler"
          class="org.t2k.cgs.packaging.ManifestHandlerImpl">
        <property name="doChangeFileNamesToSha1" value="false"/>
        <property name="doCleanExcludedResourcesFromManifest" value="true"/>
    </bean>

    <bean name="scormManifestHandler"
          class="org.t2k.cgs.packaging.ManifestHandlerImpl">
        <property name="doChangeFileNamesToSha1" value="false"/>
        <property name="doCleanExcludedResourcesFromManifest" value="true"/>
    </bean>

    <bean name="tocItemsHandlerImplWithSha1NameChanges" class="org.t2k.cgs.packaging.TocItemsHandlerImpl">
        <property name="changeFileNamesToSha1" value="true"/>
    </bean>

    <bean name="catalogueTocItemsHandler" class="org.t2k.cgs.packaging.TocItemsHandlerImpl">
        <property name="changeFileNamesToSha1" value="true"/>
    </bean>

    <bean name="blossomTocItemsHandler" class="org.t2k.cgs.packaging.TocItemsHandlerImpl">
        <property name="changeFileNamesToSha1" value="false"/>
    </bean>

    <bean name="scormTocItemsHandler" class="org.t2k.cgs.packaging.TocItemsHandlerImpl">
        <property name="changeFileNamesToSha1" value="false"/>
    </bean>

    <bean name="standAloneTocItemsHandler" class="org.t2k.cgs.packaging.TocItemsHandlerImpl">
        <property name="changeFileNamesToSha1" value="false"/>
    </bean>

    <!-- Version service -->
    <bean name="versionProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location"
                  value="classpath:config/version.properties"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <bean name="versionService" class="org.t2k.cgs.version.VersionServiceImpl"/>

    <bean name="userService" class="org.t2k.cgs.user.UserServiceImpl">
        <property name="usersDao" ref="usersDao"/>
        <property name="uniqueIdDao" ref="uniqueIdDao"/>
        <property name="newUserValidator">
            <bean class="org.t2k.cgs.user.validation.NewUserValidator"/>
        </property>
        <property name="updateUserValidator">
            <bean class="org.t2k.cgs.user.validation.UpdateUserValidator"/>
        </property>
    </bean>

    <bean name="jobsServiceBean" class="org.t2k.cgs.job.JobServiceImpl"/>

    <bean name="cleanupSchedulerBean" class="org.t2k.cgs.scheduling.CleanupScheduler"/>
    <bean name="validationScheduler" class="org.t2k.cgs.scheduling.ValidationScheduler" init-method="init"/>
    <bean name="sessionsSchedulerBean" class="org.t2k.cgs.scheduling.SessionsScheduler"/>

    <bean name="contentTreeService" class="org.t2k.cgs.tocItem.ContentTreeServiceImpl"/>
    <bean name="ttsProviderService" class="org.t2k.cgs.tts.TextToSpeechProviderServiceImpl"/>
    <bean name="userSessionService" class="org.t2k.cgs.session.UserSessionServiceImpl" init-method="init"/>
    <bean name="packageStepsUpdater" class="org.t2k.cgs.packaging.PackageStepsUpdater"/>
    <bean name="scormPackageZipper" class="org.t2k.cgs.packaging.zippers.ScormPackageZipper"/>
    <bean name="standAlonePackageZipper" class="org.t2k.cgs.packaging.zippers.StandAlonePackageZipper"/>

    <bean name="blossomLessonExecutor" class="org.t2k.cgs.packaging.executors.BlossomExecutor">
        <property name="manifestHandler" ref="blossomManifestHandler"/>
        <property name="tocItemsHandler" ref="blossomTocItemsHandler"/>
    </bean>

    <bean name="blossomCoursesExecutor" class="org.t2k.cgs.packaging.executors.BlossomExecutor">
        <property name="manifestHandler" ref="standAloneManifestHandler"/>
        <property name="tocItemsHandler" ref="standAloneTocItemsHandler"/>
    </bean>

    <bean name="publishUrlLessonExecutor" class="org.t2k.cgs.packaging.executors.PublishToURLExecutor">
        <property name="manifestHandler" ref="blossomManifestHandler"/>
        <property name="tocItemsHandler" ref="blossomTocItemsHandler"/>
    </bean>

    <bean name="publishUrlCoursesExecutor" class="org.t2k.cgs.packaging.executors.BlossomExecutor">
        <property name="manifestHandler" ref="standAloneManifestHandler"/>
        <property name="tocItemsHandler" ref="standAloneTocItemsHandler"/>
    </bean>

    <bean name="scormExecutor" class="org.t2k.cgs.packaging.executors.ScormExecutor">
        <property name="manifestHandler" ref="scormManifestHandler"/>
        <property name="tocItemsHandler" ref="scormTocItemsHandler"/>
    </bean>

    <bean name="catalogueExecutor" class="org.t2k.cgs.packaging.executors.CatalogueExecutor">
        <property name="manifestHandler" ref="catalogueManifestHandler"/>
        <property name="tocItemsHandler" ref="catalogueTocItemsHandler"/>
    </bean>

    <bean name="standAloneExecutor" class="org.t2k.cgs.packaging.executors.StandAloneExecutor">
        <property name="manifestHandler" ref="standAloneManifestHandler"/>
        <property name="tocItemsHandler" ref="standAloneTocItemsHandler"/>
    </bean>

    <bean name="urlServerUploader" class="org.t2k.cgs.packaging.uploaders.UrlServerUploader"/>

    <bean name="packageExecutorsFactory" class="org.t2k.cgs.packaging.executors.PackageExecutorsFactory"/>
    <bean name="schemaHandler" class="org.t2k.cgs.packaging.SchemaHandlerImpl"/>
    <bean name="packageHandler" class="org.t2k.cgs.packaging.PackageHandlerImpl" scope="prototype"/>
    <bean name="loggingFormatter" class="org.t2k.cgs.model.logging.LoggingFormatter"/>
    <bean name="loggingService" class="org.t2k.cgs.logging.LoggingServiceImpl"/>
    <bean name="testUtils" class="org.t2k.testUtils.TestUtils"/>
    <bean name="publishedScormZipValidator" class="org.t2k.cgs.packaging.validators.PublishedScormZipValidator"
          init-method="init" destroy-method="tearDown">
        <property name="scormSchemasZip" value="classpath:scormSchema/scorm2004XSD.zip"/>
    </bean>

    <bean name="bundlesDataService" class="org.t2k.cgs.bundles.BundlesDataServiceImpl"/>
    <bean name="publishedStandAloneZipValidator"
          class="org.t2k.cgs.packaging.validators.PublishedStandAloneZipValidator"/>
    <bean name="scormManifestBuilder" class="org.t2k.cgs.packaging.ScormManifestBuilder"/>
    <bean name="standardsHelper" class="org.t2k.cgs.standards.parser.StandardsHelper"/>
    <bean name="oAuthValidator" class="org.t2k.cgs.security.OAuthValidator" init-method="initVariables"/>
    <bean name="externalPartnersService" class="org.t2k.cgs.publisher.ExternalPartnersServiceImpl"/>
    <bean name="oAuthSecurityService" class="org.t2k.cgs.security.OAuthSecurityServiceImpl">
        <property name="authenticationManager" ref="mockAuthenticationManager"/>
    </bean>
    <security:authentication-manager id="mockAuthenticationManager"></security:authentication-manager>

    <bean id="isWindows" class="java.lang.Boolean">
        <constructor-arg value='#{systemProperties["os.name"].contains("Windows")}'/>
    </bean>

    <bean name="filesUtils" class="org.t2k.cgs.utils.FilesUtils">
        <constructor-arg name="jobService" ref="jobsServiceBean"/>
    </bean>

    <bean id="configPath" class="java.lang.String">
        <constructor-arg value="#{isWindows ? 'windows' : 'linux'}"/>
    </bean>

    <bean name="t2kConfig" class="com.t2k.configurations.Configuration" init-method="loadConfigurations">
        <constructor-arg index="0">
            <list>
                <!--<value>#{'config/'+configPath+'/cgsConfig.properties'}</value>-->
                <!--<value>#{'config/'+configPath+'/cms.properties'}</value>-->
                <!--<value>config/mongo.properties</value>-->
                <value>config/version.properties</value>
                <!--<value>config/users.properties</value>-->
                <value>config/t2k.properties</value>
                <value>#{'config/'+configPath+'/t2k.properties'}</value>
            </list>
        </constructor-arg>
    </bean>

    <!--scp conversion-->
    <bean name="scpConverter" class="org.t2k.cgs.preview.ScpConverter" scope="prototype"/>
    <bean name="scpConversionService" class="org.t2k.cgs.preview.ScpConversionServiceImpl">
        <property name="courseDataService" ref="coursesDataServiceBean"/>
    </bean>
    <!--END: scp conversion-->

    <bean name="thumbnailsGeneratorService" class="org.t2k.cgs.thumbnails.ThumbnailsGeneratorServiceImpl"
          init-method="init">
        <property name="phantomJs" value="classpath:phantomjs/phantomjs.exe"/>
        <property name="captureScreenScript" value="classpath:phantomjs/captureScreen.js"/>
        <property name="jqueryMinifiedScript" value="classpath:phantomjs/jquery-2.1.3.min.js"/>
    </bean>
    <bean name="ebookUtil" class="org.t2k.cgs.ebooks.EBookUtil"></bean>

    <!-- Standard Loader -->
    <bean name="textLoader" class="org.t2k.cgs.standards.loader.TextLoader">
        <property name="standardsDao" ref="standardsDao"/>
        <property name="jsonConverter">
            <bean class="org.t2k.cgs.standards.parser.SimpleJSONConverter"/>
        </property>
        <property name="packageDetailsRetriever" ref="packageDetailsRetriever"/>
        <property name="standardsParser" ref="standardsParser"/>
        <property name="treeConstructionStrategy">
            <bean class="org.t2k.cgs.standards.tree.SimpleTreeConstructionStrategy"/>
        </property>
        <property name="uniquePedagogicalIdValidator">
            <bean class="org.t2k.cgs.standards.validators.UniquePedagogicalIdValidator"/>
        </property>
        <property name="correctNumberOfColumnsValidator">
            <bean class="org.t2k.cgs.standards.validators.CorrectNumberOfColumnsValidator">
                <property name="correctNumberOfColumns" value="10"/>
            </bean>
        </property>
    </bean>

    <bean name="standardsParser" class="org.t2k.cgs.standards.parser.CSVStandardsParser">
        <property name="descriptionProcessor">
            <bean class="org.t2k.cgs.standards.stringProcessing.SpecialCharactersDecoderProcessor"/>
        </property>
        <property name="nameProcessor">
            <bean class="org.t2k.cgs.standards.stringProcessing.SpecialCharactersDecoderProcessor"/>
        </property>
        <property name="gradeLevelProcessor">
            <bean class="org.t2k.cgs.standards.stringProcessing.LowerCaseProcessor"/>
        </property>
    </bean>

    <bean name="packageDetailsRetriever" class="org.t2k.cgs.standards.metadata.PackageDetailsRetrieverImpl">
        <property name="countryStringProcessor">
            <bean class="org.t2k.cgs.standards.stringProcessing.NullStringProcessor"/>
        </property>
        <property name="nameStringProcessor">
            <bean class="org.t2k.cgs.standards.stringProcessing.LowerCaseProcessor"/>
        </property>
        <property name="stateStringProcessor">
            <bean class="org.t2k.cgs.standards.stringProcessing.NullStringProcessor"/>
        </property>
        <property name="subjectAreaStringProcessor">
            <bean class="org.t2k.cgs.standards.stringProcessing.StringProcessingSequence">
                <property name="processingList">
                    <list>
                        <bean class="org.t2k.cgs.standards.stringProcessing.DictionaryReplacingProcessor">
                            <property name="dictionary">
                                <map>
                                    <entry key="MATH_US" value="MATH"/>
                                </map>
                            </property>
                        </bean>
                        <bean class="org.t2k.cgs.standards.stringProcessing.LowerCaseProcessor"/>
                        <bean class="org.t2k.cgs.standards.stringProcessing.DictionaryReplacingProcessor">
                            <property name="dictionary">
                                <map>
                                    <entry key="language_arts" value="languageArts"/>
                                    <entry key="road_safety" value="roadSafety"/>
                                </map>
                            </property>
                        </bean>
                    </list>
                </property>
            </bean>
        </property>
        <property name="descriptionStringProcessor">
            <bean class="org.t2k.cgs.standards.stringProcessing.NullStringProcessor"/>
        </property>
    </bean>
    <!-- END: Standard Loader -->
</beans>